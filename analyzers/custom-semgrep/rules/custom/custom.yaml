/*
 * See the original LICENSE in analyzers/custom-semgrep/LICENSE file for details.
 */
rules:
- id: detected-log4j-core
  pattern-either:
  - pattern-regex: log4j-core[<>a-zA-Z0-9\/\n \r.-]{1,100}<version>2\.(([0-9][^0-9])|(1[0-6]))
  - pattern-regex: <version>2\.(([0-9][^0-9])|(1[0-6]))[<>a-zA-Z0-9\/\n \r.-]{1,100}log4j-core
  - pattern-regex: log4j-core['", a-zA-Z]{1,10}version[:'" =]{1,5}2\.(([0-9][^0-9])|(1[0-6]))
  - pattern-regex: log4j-core['", a-zA-Z]{1,10}rev['" =]{1,5}2\.(([0-9][^0-9])|(1[0-6]))
  languages: [regex]
  message: log4j-core insecure version detected
  severity: ERROR
  metadata:
    category: security

- id: log4j-message-injection
  metadata:
    category: security
    technology:
    - java
  message: Possible Lookup injection into Log4j messages.
  patterns:
  # Checks for error(...), warn(...), info(...), debug(...), fatal(...), trace(...), log(level, ...):
  - pattern-either:
    - pattern: (org.apache.logging.log4j.Logger $W).fatal($X + $Y, ...);
    - pattern: |
        String $MSG = $X + $Y;
        ...
        (org.apache.logging.log4j.Logger $W).fatal($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += $Y;
        ...
        (org.apache.logging.log4j.Logger $W).fatal($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).fatal(String.format($X, ...), ...);
    - pattern: |
        String $MSG = String.format($X, ...);
        ...
        (org.apache.logging.log4j.Logger $W).fatal($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += String.format(...);
        ...
        (org.apache.logging.log4j.Logger $W).fatal($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).error($X + $Y, ...);
    - pattern: |
        String $MSG = $X + $Y;
        ...
        (org.apache.logging.log4j.Logger $W).error($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += $Y;
        ...
        (org.apache.logging.log4j.Logger $W).error($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).error(String.format($X, ...), ...);
    - pattern: |
        String $MSG = String.format($X, ...);
        ...
        (org.apache.logging.log4j.Logger $W).error($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += String.format(...);
        ...
        (org.apache.logging.log4j.Logger $W).error($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).warn($X + $Y, ...);
    - pattern: |
        String $MSG = $X + $Y;
        ...
        (org.apache.logging.log4j.Logger $W).warn($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += $Y;
        ...
        (org.apache.logging.log4j.Logger $W).warn($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).warn(String.format($X, ...), ...);
    - pattern: |
        String $MSG = String.format($X, ...);
        ...
        (org.apache.logging.log4j.Logger $W).warn($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += String.format(...);
        ...
        (org.apache.logging.log4j.Logger $W).warn($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).info($X + $Y, ...);
    - pattern: |
        String $MSG = $X + $Y;
        ...
        (org.apache.logging.log4j.Logger $W).info($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += $Y;
        ...
        (org.apache.logging.log4j.Logger $W).info($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).info(String.format($X, ...), ...);
    - pattern: |
        String $MSG = String.format($X, ...);
        ...
        (org.apache.logging.log4j.Logger $W).info($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += String.format(...);
        ...
        (org.apache.logging.log4j.Logger $W).info($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).debug($X + $Y, ...);
    - pattern: |
        String $MSG = $X + $Y;
        ...
        (org.apache.logging.log4j.Logger $W).debug($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += $Y;
        ...
        (org.apache.logging.log4j.Logger $W).debug($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).debug(String.format($X, ...), ...);
    - pattern: |
        String $MSG = String.format($X, ...);
        ...
        (org.apache.logging.log4j.Logger $W).debug($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += String.format(...);
        ...
        (org.apache.logging.log4j.Logger $W).debug($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).trace($X + $Y, ...);
    - pattern: |
        String $MSG = $X + $Y;
        ...
        (org.apache.logging.log4j.Logger $W).trace($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += $Y;
        ...
        (org.apache.logging.log4j.Logger $W).trace($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).trace(String.format($X, ...), ...);
    - pattern: |
        String $MSG = String.format($X, ...);
        ...
        (org.apache.logging.log4j.Logger $W).trace($MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += String.format(...);
        ...
        (org.apache.logging.log4j.Logger $W).trace($MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).log($LEVEL, $X + $Y, ...);
    - pattern: |
        String $MSG = $X + $Y;
        ...
        (org.apache.logging.log4j.Logger $W).log($LEVEL, $MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += $Y;
        ...
        (org.apache.logging.log4j.Logger $W).log($LEVEL, MSG, ...);
    - pattern: (org.apache.logging.log4j.Logger $W).log($LEVEL, String.format($X, ...), ...);
    - pattern: |
        String $MSG = String.format($X, ...);
        ...
        (org.apache.logging.log4j.Logger $W).log($LEVEL, $MSG, ...);
    - pattern: |
        String $MSG = $X;
        ...
        $MSG += String.format(...);
        ...
        (org.apache.logging.log4j.Logger $W).log($LEVEL, $MSG, ...);
  severity: WARNING
  languages:
  - java
  
- id: spring-controller-exists
  patterns:
    - pattern-either:
        - pattern: import org.springframework.web.bind.annotation.RestController;
        - pattern: import org.springframework.web.servlet.mvc.multiaction.MultiActionController;
  message: |
    Found a Spring RestController
    Make sure you are not vulnerable or have the possible mitigations
    https://www.praetorian.com/blog/spring-core-jdk9-rce/
  languages:
    - java
  severity: INFO
  metadata:
    references:
      - https://www.praetorian.com/blog/spring-core-jdk9-rce/
      - https://www.cyberkendra.com/2022/03/spring4shell-details-and-exploit-code.html
    category: security
