services:
  server:
    image: tcosolutions/betterscan-server:latest
    restart: always
    environment: 
      QC_SETTINGS: /srv/betterscan/quantifiedcode/settings/default.yml
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /srv/betterscan/
    entrypoint: sh
    command: -c "mkdir -p data1/repositories data2/tasks setup_state && \
      if [ -f /srv/betterscan/setup_state/setup_done ]; \
      then python /srv/betterscan/manage.py runserver; \
      else python /srv/betterscan/manage.py setup && touch /srv/betterscan/setup_state/setup_done; \
      fi"
    ports:
      - 5001:5000
    volumes:
      - data1:/srv/betterscan/quantifiedcode/data/
      - data2:/srv/betterscan/quantifiedcode/backend/data/tasks
      - setup_state:/srv/betterscan/setup_state

  postgres:
    image: postgres:13.2
    restart: always
    environment:
      POSTGRES_DB: qc
      POSTGRES_USER: qc
      POSTGRES_PASSWORD: qc
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qc"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker_1:
    image: tcosolutions/betterscan-worker:latest
    ulimits:
      stack: -1
    restart: always
    hostname: worker_1
    depends_on:
      rabbitmq3:
        condition: service_healthy
      postgres:
        condition: service_healthy
      server:
        condition: service_healthy
    working_dir: /srv/betterscan/
    entrypoint: sh
    command: -c "python /srv/betterscan/manage.py runworker"
    volumes:
      - data1:/srv/betterscan/quantifiedcode/data/
      - data2:/srv/betterscan/quantifiedcode/backend/data/tasks

  rabbitmq3:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: qc
      RABBITMQ_DEFAULT_PASS: qc
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5672"]
      interval: 5s
      timeout: 15s
      retries: 1

volumes:
  db-data:
    driver: local
  data1:
    driver: local
  data2:
    driver: local
  setup_state:
    driver: local
