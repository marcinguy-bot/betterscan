steps:
  # Step to set up Docker Buildx
  - name: 'gcr.io/cloud-builders/docker'
    args: ['buildx', 'create', '--name', 'mybuilder']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['buildx', 'use', 'mybuilder']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['buildx', 'inspect', '--bootstrap']

  # Step to authenticate to Google Cloud Container Registry (GCR)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo $SERVICE_ACCOUNT_KEY > /workspace/service-account-key.json
        gcloud auth activate-service-account --key-file=/workspace/service-account-key.json
        gcloud config set project $PROJECT_ID
        gcloud auth configure-docker

  # Step to authenticate with Azure Container Registry (ACR) and get access token
  - name: 'mcr.microsoft.com/azure-cli'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        az login --service-principal -u ${_AZURE_CLIENT_ID} -p ${_AZURE_CLIENT_SECRET} --tenant ${_AZURE_TENANT_ID}

  # Step to log in to ACR using Docker and the access token
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        ACCESS_TOKEN=$(cat /workspace/access_token.txt)
        docker login ${_AZURE_REGISTRY_NAME}.azurecr.io --username 00000000-0000-0000-0000-000000000000 --password ${_ACCESS_TOKEN}


  - name: 'gcr.io/cloud-builders/docker'
    id: Build and push worker-cli image to GCR
    args:
      [
        'buildx', 'build', '.', 
        '--platform', 'linux/amd64,linux/arm64',
        '--tag', 'gcr.io/$PROJECT_ID/betterscan-worker-cli:amd64-latest',
        '--tag', 'gcr.io/$PROJECT_ID/betterscan-worker-cli:arm64-latest',
        '--tag', 'gcr.io/$PROJECT_ID/betterscan-worker-cli:latest',
        '--push',
        '--file', 'docker/docker/worker-cli/Dockerfile'
      ]


  - name: 'gcr.io/cloud-builders/docker'
    id: Build and push worker-cli image to ACR
    args:
      [
        'buildx', 'build', '.', 
        '--platform', 'linux/amd64,linux/arm64',
        '--tag', '${_AZURE_REGISTRY_NAME}.azurecr.io/betterscan-worker-cli:amd64-latest',
        '--tag', '${_AZURE_REGISTRY_NAME}.azurecr.io/betterscan-worker-cli:arm64-latest',
        '--tag', '${_AZURE_REGISTRY_NAME}.azurecr.io/betterscan-worker-cli:latest',
        '--push',
        '--file', 'docker/docker/worker-cli/Dockerfile'
      ]

images:
  - 'gcr.io/$PROJECT_ID/betterscan-worker-cli:latest'
  - '${_AZURE_REGISTRY_NAME}.azurecr.io/betterscan-worker-cli:latest'

substitutions:
  _AZURE_REGISTRY_NAME: 'your-registry-name'
  _AZURE_CLIENT_ID: 'your-client-id'
  _AZURE_CLIENT_SECRET: 'your-client-secret'
  _AZURE_TENANT_ID: 'your-tenant-id'
  _ACCESS_TOKEN: 'access-token'

# Add this to include the service account key as an encrypted secret
secrets:
- kmsKeyName: projects/your-project-id/locations/global/keyRings/your-key-ring/cryptoKeys/your-key
  secretEnv:
    SERVICE_ACCOUNT_KEY: 'YOUR_ENCRYPTED_SERVICE_ACCOUNT_KEY'

